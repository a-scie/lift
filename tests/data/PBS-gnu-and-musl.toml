[lift]
name = "gnu-and-musl"
description = "Tests a Python scie that can run on either a gnu or musl libc Linux machine."

[[lift.files]]
name = "busybox"
type = "blob"
is_executable = true
[lift.files.source]
url = "https://www.busybox.net/downloads/binaries/1.35.0-x86_64-linux-musl/busybox"
lazy = false
[lift.files.digest]
fingerprint = "6e123e7f3202a8c1e9b1f94d8941580a25135382b99e8d3e34fb858bba311348"
size = 1131168

[[lift.interpreters]]
id = "cpython-gnu"
libc = "gnu"
provider = "PythonBuildStandalone"
release = "20250212"
lazy = false
version = "3.13.2"
flavor = "install_only_stripped"

[[lift.interpreters]]
id = "cpython-musl"
libc = "musl"
provider = "PythonBuildStandalone"
release = "20250212"
lazy = false 
version = "3.13.2"
flavor = "install_only_stripped"

[[lift.interpreter_groups]]
id = "cpython"
selector = "{scie.bindings.configure:PYTHON}"
members = [
    "cpython-gnu",
    "cpython-musl",
]

[[lift.commands]]
exe = "#{cpython:python}"
args = ["-V"]

[[lift.bindings]]
name = "configure"
exe = "{busybox}"
args = [
    "sh",
    "-euc",
    """\
# Poor man's musl system detection. The /bin/sh binary path is a Posix guaranty and so we're really
# just banking on the binary there being dynamically linked; which it almost always is.
if ldd /bin/sh 2>&1 | {busybox} grep musl >/dev/null; then
    echo "PYTHON=cpython-musl" >> "${{SCIE_BINDING_ENV}"
else
    echo "PYTHON=cpython-gnu" >> "${{SCIE_BINDING_ENV}"
fi
echo >&2 Configured:
cat >&2 "${{SCIE_BINDING_ENV}"
"""
]
